// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  authProviderId String?
  password String
  role Role
  projects Project[]
  tasks Task[]
  profile Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id Int @id @default(autoincrement())
  bio String
  avatar String
  occupation String
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
}


model Project {
  id Int @id @default(autoincrement())
  name String 
  description String?
  ownerId Int
  owner User @relation(fields: [ownerId], references: [id])
  tasks Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id Int @id @default(autoincrement())
  name String
  description String?
  status TaskStatus
  priority TaskPriority
  assigneedId Int?
  assignee User? @relation(fields: [assigneedId], references: [id])
  projectId Int
  project Project @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  DONE
}

enum Role {
  ADMIN
  MANAGER
  MEMBER
}